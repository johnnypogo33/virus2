---
version: '2'

services:
  node:
    build: .
    volumes:
      - "./app/static:/usr/src/app/static"
      - "./app/private:/usr/src/app/private"
      - "./app/code:/usr/src/app/app"
      - "./app/test:/usr/src/app/test"
      - "./app/config:/usr/src/app/config"
      - "./app/views:/usr/src/app/views"
    links:
      - mongo:mongo
    environment:
      - MONGO_USER=${MONGO_USER}
      - MONGO_PASS=${MONGO_PASS}
      - MONGO_HOST=mongo
      - MONGO_PORT=27017
      - MONGO_DB=login
      # The virtual host is used when we want to access our site via an
      # Nginx Proxy locally; and is required by the script
      # ./scripts/https-deploy.sh.
      # See https://blog.dcycle.com/blog/2018-10-27 for details.
      # See also https://blog.dcycle.com/blog/7f3ea9e1/
      # See also https://blog.dcycle.com/blog/170a6078/
      - VIRTUAL_HOST=www.notavirus.ca
      - LETSENCRYPT_HOST=www.notavirus.ca
      - LETSENCRYPT_EMAIL="letsencrypt@www.notavirus.ca"
      - EXPRESS_SESSION_SECRET=${EXPRESS_SESSION_SECRET}
      - SALT=${SALT}
    ports:
      - "${DOCKERPORT}:8080"

  mongo:
    image: mongo:4
    ports:
      - "27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASS}
    volumes:
      - mongo:/data/db

# Specifying the network name makes it predictable on all environments,
# for example when running browser tests on a CI environment, or any other
# tasks which requires external docker containers to connect to our network.
# This network has been previously created in ./scripts/deploy.sh
# See https://github.com/docker/compose/issues/3736.
networks:
  default:
    name: ${DOCKERNETWORK}
    external: true

volumes:
  mongo:
